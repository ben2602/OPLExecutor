//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.03.13 at 10:49:01 AM CET 
//


package org.imf.oplexecutor.fims.bms;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for QueueStatusType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="QueueStatusType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="started"/>
 *     &lt;enumeration value="stopped"/>
 *     &lt;enumeration value="locked"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "QueueStatusType")
@XmlEnum
public enum QueueStatusType {


    /**
     * Queue has started successfully.
     * 
     */
    @XmlEnumValue("started")
    STARTED("started"),

    /**
     * 
     *             Queue has been stopped successfully. The queue is not accepting newly submitted jobs.
     *           
     * 
     */
    @XmlEnumValue("stopped")
    STOPPED("stopped"),

    /**
     * 
     *             Queue has been locked successfully and will not accept any new submitted jobs. 
     *             The jobs already in the queue will continue to start or run to completion.
     *           
     * 
     */
    @XmlEnumValue("locked")
    LOCKED("locked");
    private final String value;

    QueueStatusType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static QueueStatusType fromValue(String v) {
        for (QueueStatusType c: QueueStatusType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
